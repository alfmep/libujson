.\" Manpage for ujson-verify
.\" Contact dan@ultramarin.se to correct errors or types.
.TH ujson-merge 1 "" "" "User Commands"


.SH NAME
ujson-merge \- Merge multiple JSON documents into one.


.SH SYNOPSIS
.B ujson-merge
[OPTIONS] MASTER_FILE [SLAVE_FILE...]


.SH DESCRIPTION
ujson-merge joins one or more JSON documents into one master JSON document and prints the result to standard output.
If only a master document is present on the command line, it will be merged from standard input.
.PP
When merging JSON instance B into JSON instance A, the following rules apply:
.nf
- If A is a number, it will be replaced by the instance B.
- If A is null, it will be replaced by the instance B.
- If A is a boolean, it will be replaced by the instance B.
- If A is a string, it will be replaced by the instance B.
- If A is an array, it will be replaced by the instance B.
- If A is an object and B is not an object, A will be replaced by instance B.
- If both A and B are objects:
    - If a member name in B exitst in A, then B will be merged into A using theese rules.
    - If a member name in B doesn't exitst A, that member will be added to A,


.SH OPTIONS
.TP
.B -c, --compact
Print the resulting JSON document without whitespaces.
.TP
.B -r, --relaxed
Parse JSON documents in relaxed mode.

.TP
.B -d, --dst-pointer=POINTER
Merge into this specific place in the master document.

.TP
.B -s, --src-pointer=POINTER
Merge from this specific place in the slave document(s).

.TP
.B -m, --match-type
All values that are merged must be of the same type. Note that the content in two arrays may be of different types.

.TP
.B -h, --help
Print help and exit.


.SH POINTER
A JSON Pointer as described in RFC 6901.
A pointer specifies a specific value in a JSON document. Is is a string containing zero or more reference tokens separated by '/'. If a '/' is part of a token it is encodec as '~1'. And if a '~' is parf of a token it is encoded as '~0'.


.SH EXAMPLES
Given the following JSON documents:
.PP
Document A.json:
.EX
{
    "name": "master",
    "value": 0,
    "list": [1, 2, 3],
    "obj": {
        "desc": null,
        "place": "home"
    }
}
.EE
.PP
Document B.json:
.EX
{
    "name": "replacement",
    "obj": {
        "desc": "Hello World!",
        "misc": [true, false]
    },
    "meaning": 42
}
.EE

.pp
Result of runnning command "ujson-merge A.json B.json":
.EX
{
    "name": "replacement",
    "value": 0,
    "list": [1, 2, 3],
    "obj": {
        "desc": "Hello World!",
        "place": "home",
        "misc": [true, false]
    },
    "meaning": 42
}
.EE

.pp
Result of runnning command "ujson-merge --match-type A.json B.json":
.EX
JSON type mismatch. Trying to assign a value of type string to an instance of type null
.EE

.pp
Result of runnning command "ujson-merge --dst-pointer=/list --src-pointer=/obj/misc A.json B.json":
.EX
{
    "name": "master",
    "value": 0,
    "list": [true, false],
    "obj": {
        "desc": null,
        "place": "home"
    }
}
.EE


.SH SEE ALSO
ujson-verify(1) ujson-cmp(1) ujson-print(1) ujson-get(1)


.SH AUTHOR
Dan Arrhenius (dan@ultramarin.se)
